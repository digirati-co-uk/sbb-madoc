#!/usr/bin/env bash
#
# Requirements:
#   - MySQL CLI
#   - Postgres CLI
#
# This will check the following credentials:
#   - MySQL database
#   - All Postgres users
#   - Proxy configuration
#

source .env

echo -e "";
echo -e "";

echo -e "Validating MySQL credentials"

echo -e "";

if ! mysql -u "${MYSQL_USER}" -p"${MYSQL_PASSWORD}" --port "${MYSQL_PORT}" --host "${MYSQL_HOST}" -e "use ${MYSQL_DATABASE}"; then
  echo -e "";
  echo -e "\033[00;31m   ✗ Could not connect to MySQL, please check credentials";
  exit 0;
else
  echo -e "\033[32m   ✔ Connected to MySQL database.\033[39m";
fi
echo -e "";


testPostgres() {
  TP_USER=$1;
  TP_PASSWORD=$2;

  PGPASSWORD="${TP_PASSWORD}" psql -h "${POSTGRES_HOST}" -d "${POSTGRES_DB}" -p "${POSTGRES_PORT:-5432}" -U "${TP_USER}" -c "\d"
  case $? in
    0)
      echo -e "\033[32m   ✔ Connected to Postgres database: ${POSTGRES_DATABASE} as user ${TP_USER} \033[39m";
      return 1;
    ;;
  esac;

  echo -e "";
  echo -e "\033[00;31m   ✗ Could not connect to Postgres with user ${TP_USER}";
  exit 0;
}

testPostgres "${POSTGRES_MADOC_TS_USER}" "${POSTGRES_MADOC_TS_PASSWORD}"
testPostgres "${POSTGRES_TASKS_API_USER}" "${POSTGRES_TASKS_API_PASSWORD}"
testPostgres "${POSTGRES_MODELS_API_USER}" "${POSTGRES_MODELS_API_PASSWORD}"
testPostgres "${POSTGRES_CONFIG_SERVICE_USER}" "${POSTGRES_CONFIG_SERVICE_PASSWORD}"
testPostgres "${POSTGRES_SEARCH_API_USER}" "${POSTGRES_SEARCH_API_PASSWORD}"
